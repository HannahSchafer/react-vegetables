{"ast":null,"code":"var _jsxFileName = \"/Users/hannahschafer/Desktop/src/kata/src/App.js\";\nimport React, { Component } from 'react';\nimport { withNamespaces, NamespacesConsumer, Trans, translate } from 'react-i18next';\nimport logo from \"./logo.svg\";\nimport './App.css'; // Component using the higher order component withNamespaces\n// pass t function via props into the component\n// learn more: https://react.i18next.com/components/withnamespaces\n\nfunction MyComponent({\n  t\n}) {\n  return React.createElement(Trans, {\n    i18nKey: \"description.part1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"To get started, edit \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"src/App.js\"), \" and save to reload.\");\n}\n\nconst MyComponentWrapped = withNamespaces()(MyComponent); // the app gets passed in t and i18n by using same hoc withNamespaces\n// using i18n.changeLanguage you can change the language programmatically\n// (same is possible using the NamespacesConsumer render prop - just read the docs)\n\nclass App extends Component {\n  render() {\n    const _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n\n    const changeLanguage = lng => {\n      console.log('in change lang', lng);\n      i18n.changeLanguage(lng);\n    };\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => changeLanguage('de'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"de\"), React.createElement(\"button\", {\n      onClick: () => changeLanguage('en'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"en\")), React.createElement(\"div\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(MyComponentWrapped, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, t('description.part2')), React.createElement(\"h1\", {\n      className: \"App-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.t('welcome.title', {\n      framework: \"react-i18next\"\n    })), React.createElement(Trans, {\n      i18nKey: \"welcome.intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"To get started, edit \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"src/App.js\"), \" and save to reload.\"));\n  }\n\n}\n\nexport default translate('common')(App); // export default withNamespaces('translation')(App);","map":{"version":3,"sources":["/Users/hannahschafer/Desktop/src/kata/src/App.js"],"names":["React","Component","withNamespaces","NamespacesConsumer","Trans","translate","MyComponent","t","MyComponentWrapped","App","render","props","i18n","changeLanguage","lng","console","log","logo","framework"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,EAAyBC,kBAAzB,EAA6CC,KAA7C,EAAoDC,SAApD,QAAqE,eAArE;;AAEA,OAAO,WAAP,C,CAEA;AACA;AACA;;AACA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAA4B;AAC1B,SACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADvB,yBADF;AAKD;;AACD,MAAMC,kBAAkB,GAAGN,cAAc,GAAGI,WAAH,CAAzC,C,CAEA;AACA;AACA;;AACA,MAAMG,GAAN,SAAkBR,SAAlB,CAA4B;AAC1BS,EAAAA,MAAM,GAAG;AAAA,wBACa,KAAKC,KADlB;AAAA,UACCJ,CADD,eACCA,CADD;AAAA,UACIK,IADJ,eACIA,IADJ;;AAGP,UAAMC,cAAc,GAAGC,GAAG,IAAI;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B;AACAF,MAAAA,IAAI,CAACC,cAAL,CAAoBC,GAApB;AACD,KAHD;;AAKA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEG,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAMJ,cAAc,CAAC,IAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,MAAMA,cAAc,CAAC,IAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMN,CAAC,CAAC,mBAAD,CAAP,CATF,EAUE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKI,KAAL,CAAWJ,CAAX,CAAa,eAAb,EAA8B;AAAEW,MAAAA,SAAS,EAAE;AAAb,KAA9B,CADN,CAVF,EAaE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADzB,yBAbF,CADF;AAmBD;;AA5ByB;;AA8B5B,eAAeb,SAAS,CAAC,QAAD,CAAT,CAAoBI,GAApB,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport { withNamespaces, NamespacesConsumer, Trans, translate } from 'react-i18next';\nimport logo from './logo.svg';\nimport './App.css';\n\n// Component using the higher order component withNamespaces\n// pass t function via props into the component\n// learn more: https://react.i18next.com/components/withnamespaces\nfunction MyComponent({ t }) {\n  return (\n    <Trans i18nKey=\"description.part1\">\n      To get started, edit <code>src/App.js</code> and save to reload.\n    </Trans>\n  );\n}\nconst MyComponentWrapped = withNamespaces()(MyComponent);\n\n// the app gets passed in t and i18n by using same hoc withNamespaces\n// using i18n.changeLanguage you can change the language programmatically\n// (same is possible using the NamespacesConsumer render prop - just read the docs)\nclass App extends Component {\n  render() {\n    const { t, i18n } = this.props;\n\n    const changeLanguage = lng => {\n      console.log('in change lang', lng)\n      i18n.changeLanguage(lng);\n    };\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <button onClick={() => changeLanguage('de')}>de</button>\n          <button onClick={() => changeLanguage('en')}>en</button>\n        </div>\n        <div className=\"App-intro\">\n          <MyComponentWrapped />\n        </div>\n        <div>{t('description.part2')}</div>\n        <h1 className=\"App-title\">\n            { this.props.t('welcome.title', { framework: \"react-i18next\" }) }\n        </h1>\n        <Trans i18nKey='welcome.intro'>\n            To get started, edit <code>src/App.js</code> and save to reload.\n        </Trans>\n      </div>\n    );\n  }\n}\nexport default translate('common')(App);\n// export default withNamespaces('translation')(App);"]},"metadata":{},"sourceType":"module"}