{"ast":null,"code":"var _jsxFileName = \"/Users/hannahschafer/Desktop/src/kata/src/App.js\";\nimport React, { Component, Suspense } from 'react';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport logo from \"./logo.svg\";\nimport './App.css'; // use hoc for class based components\n\nclass LegacyWelcomeClass extends Component {\n  render() {\n    const _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, t('title'));\n  }\n\n}\n\nconst Welcome = withTranslation()(LegacyWelcomeClass); // Component using the Trans component\n\nfunction MyComponent() {\n  return React.createElement(Trans, {\n    i18nKey: \"description.part1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"To get started, edit \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"src/App.js\"), \" and save to reload.\");\n} // page uses the hook\n\n\nfunction Page() {\n  const _useTranslation = useTranslation(),\n        t = _useTranslation.t,\n        i18n = _useTranslation.i18n;\n\n  const changeLanguage = lng => {\n    i18n.changeLanguage(lng);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Welcome, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => changeLanguage('de'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"de\"), React.createElement(\"button\", {\n    onClick: () => changeLanguage('en'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"en\")), React.createElement(\"div\", {\n    className: \"App-intro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(MyComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, t('description.part2')));\n} // loading component for suspense fallback\n\n\nconst Loader = () => React.createElement(\"div\", {\n  className: \"App\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: logo,\n  className: \"App-logo\",\n  alt: \"logo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, \"loading...\")); // here app catches the suspense from page in case translations are not yet loaded\n\n\nexport default function App() {\n  return React.createElement(Suspense, {\n    fallback: React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Page, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/hannahschafer/Desktop/src/kata/src/App.js"],"names":["React","Component","Suspense","useTranslation","withTranslation","Trans","LegacyWelcomeClass","render","props","t","i18n","Welcome","MyComponent","Page","changeLanguage","lng","logo","Loader","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,KAA1C,QAAuD,eAAvD;;AAEA,OAAO,WAAP,C,CAEA;;AACA,MAAMC,kBAAN,SAAiCL,SAAjC,CAA2C;AACzCM,EAAAA,MAAM,GAAG;AAAA,wBACa,KAAKC,KADlB;AAAA,UACCC,CADD,eACCA,CADD;AAAA,UACIC,IADJ,eACIA,IADJ;AAEP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,CAAC,CAAC,OAAD,CAAN,CAAP;AACD;;AAJwC;;AAM3C,MAAME,OAAO,GAAGP,eAAe,GAAGE,kBAAH,CAA/B,C,CAEA;;AACA,SAASM,WAAT,GAAuB;AACrB,SACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADvB,yBADF;AAKD,C,CAED;;;AACA,SAASC,IAAT,GAAgB;AAAA,0BACMV,cAAc,EADpB;AAAA,QACNM,CADM,mBACNA,CADM;AAAA,QACHC,IADG,mBACHA,IADG;;AAGd,QAAMI,cAAc,GAAGC,GAAG,IAAI;AAC5BL,IAAAA,IAAI,CAACI,cAAL,CAAoBC,GAApB;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMF,cAAc,CAAC,IAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAMA,cAAc,CAAC,IAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,CAAC,CAAC,mBAAD,CAAP,CAVF,CADF;AAcD,C,CAED;;;AACA,MAAMQ,MAAM,GAAG,MACb;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAED,IAAV;AAAgB,EAAA,SAAS,EAAC,UAA1B;AAAqC,EAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,C,CAOA;;;AACA,eAAe,SAASE,GAAT,GAAe;AAC5B,SACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport logo from './logo.svg';\nimport './App.css';\n\n// use hoc for class based components\nclass LegacyWelcomeClass extends Component {\n  render() {\n    const { t, i18n } = this.props;\n    return <h2>{t('title')}</h2>;\n  }\n}\nconst Welcome = withTranslation()(LegacyWelcomeClass);\n\n// Component using the Trans component\nfunction MyComponent() {\n  return (\n    <Trans i18nKey=\"description.part1\">\n      To get started, edit <code>src/App.js</code> and save to reload.\n    </Trans>\n  );\n}\n\n// page uses the hook\nfunction Page() {\n  const { t, i18n } = useTranslation();\n\n  const changeLanguage = lng => {\n    i18n.changeLanguage(lng);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Welcome />\n        <button onClick={() => changeLanguage('de')}>de</button>\n        <button onClick={() => changeLanguage('en')}>en</button>\n      </div>\n      <div className=\"App-intro\">\n        <MyComponent />\n      </div>\n      <div>{t('description.part2')}</div>\n    </div>\n  );\n}\n\n// loading component for suspense fallback\nconst Loader = () => (\n  <div className=\"App\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <div>loading...</div>\n  </div>\n);\n\n// here app catches the suspense from page in case translations are not yet loaded\nexport default function App() {\n  return (\n    <Suspense fallback={<Loader />}>\n      <Page />\n    </Suspense>\n  );\n}"]},"metadata":{},"sourceType":"module"}